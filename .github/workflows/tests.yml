name: Tests

on:
  push:
  pull_request:
  release:
  schedule:
    # Every Thursday at 1 AM
    - cron: '0 1 * * 4'

jobs:

  Tests:

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.label || matrix.python-version }} ${{ startsWith(matrix.os, 'windows') && '(Windows)' || '' }} ${{ matrix.optional && '[OPTIONAL]' }}

    strategy:
      fail-fast: false
      matrix:

        include:
          - python-version: 3.9
            label: Linting
            os: ubuntu-latest
            toxenv: docformatter_check,flake8,flake8_tests,isort_check,mypy,sphinx,pydocstyle,pylint,pylint_tests

          - python-version: 3.9
            os:  ubuntu-latest
            toxenv: py39
            test_keyboard: 1
            test_raw: 1

          - python-version: 3.9
            os: windows-latest
            toxenv: py39

          - python-version: 3.8
            os:  ubuntu-latest
            toxenv: py38
            test_quick: 1

          - python-version: 3.7
            os:  ubuntu-latest
            toxenv: py37
            test_quick: 1

          - python-version: 3.6
            os:  ubuntu-latest
            toxenv: py36
            test_quick: 1

          - python-version: 3.5
            os:  ubuntu-latest
            toxenv: py35
            test_quick: 1

          - python-version: 3.4
            os:  ubuntu-18.04
            toxenv: py34
            test_quick: 1

          - python-version: 2.7
            os:  ubuntu-latest
            toxenv: py27
            test_keyboard: 1
            test_raw: 1

          - python-version: 2.7
            os: windows-latest
            toxenv: py27

          - python-version: '3.10-dev'
            optional: true
            os:  ubuntu-latest
            toxenv: py310
            toxpython: 3.10
            test_quick: 1

    env:
      TOXENV: ${{ matrix.toxenv }}
      TEST_QUICK: ${{ matrix.test_quick || 0 }}
      TEST_KEYBOARD: ${{ matrix.test_keyboard || 0 }}
      TEST_RAW: ${{ matrix.test_raw || 0 }}
      TOXPYTHON: python${{ matrix.toxpython || matrix.python-version }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tox
        run: pip install tox

      - name: Collect terminal information
        run: tox -e about

      - name: Run tox
        run: tox

      - name: Upload to Codecov
        if: ${{ matrix.label != 'linting' }}

        # CodeCov Python Uploader
        env:
          CODECOV_ENV: TEST_QUICK,TEST_KEYBOARD,TEST_RAW
          CODECOV_NAME: ${{ matrix.label || matrix.python-version }} ${{ startsWith(matrix.os, 'windows') && '(Windows)' || '' }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: tox -e codecov

        # CodeCov GitHub Actions Uploader
        # uses: codecov/codecov-action@v2
        # with:
        #   verbose: true
        #   name: ${{ matrix.label || matrix.python-version }} ${{ startsWith(matrix.os, 'windows') && '(Windows)' || '' }}
        #   env_vars: TOXENV,TEST_QUICK,TEST_KEYBOARD,TEST_RAW
